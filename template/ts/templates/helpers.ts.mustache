{{#chains}}
import { {{ name | camel_case }}Chain } from './{{ network }}/{{ name }}'
{{/chains}}
import { HelixChainConf } from './helixconf'


export class HelixChain {
{{#chains}}
  static {{ name | camel_case }}: HelixChainConf = {{ name | camel_case }}Chain;
{{/chains}}

  static names(): string[] {
    return [
      {{#chains}}
      '{{ name | camel_case }}',
      {{/chains}}
    ];
  }

  static chains(): HelixChainConf[] {
    return [
      {{#chains}}
      HelixChain.{{ name | camel_case }},
      {{/chains}}
    ];
  }

  static get(chain: string | number | bigint): HelixChainConf | undefined {
    const typeofName = typeof chain;
    if (typeofName === 'string') {
      const upperCaseChainName = chain.toString().toUpperCase();
      return HelixChain.chains().find(item => item.code.toUpperCase() === upperCaseChainName);
    }
    if (typeofName === 'number' || typeofName === 'bigint') {
      return HelixChain.chains().find(item => item.id.toString() === chain.toString());
    }
  }
}


