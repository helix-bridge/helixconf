{{#chains}}
import { {{ name | camel_case }}Chain } from './{{ network }}/{{ name }}'
{{/chains}}
import { HelixChainConf, ChainsOptions } from './helixconf'


export class HelixChain {
{{#chains}}
  static {{ name | camel_case }}: HelixChainConf = {{ name | camel_case }}Chain;
{{/chains}}

  static codes(): string[] {
    return [
      {{#chains}}
      '{{ code }}',
      {{/chains}}
    ];
  }

  static chains(options?: ChainsOptions): HelixChainConf[] {
    const chains = [
      {{#chains}}
      HelixChain.{{ name | camel_case }},
      {{/chains}}
    ];
    const network = options?.network;
    if (!network) return chains;
    return chains.filter(item => item._network === network);
  }

  static get(chain: string | number | bigint): HelixChainConf | undefined {
    const upperCaseChainName = chain.toString().toUpperCase();
    return HelixChain.chains().find(
      item => item.code.toUpperCase() === upperCaseChainName || item.id.toString() === upperCaseChainName
    );
  }
}


